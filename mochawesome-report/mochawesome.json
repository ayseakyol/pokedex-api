{
  "stats": {
    "suites": 8,
    "tests": 45,
    "passes": 45,
    "pending": 0,
    "failures": 0,
    "start": "2020-06-04T11:12:47.832Z",
    "end": "2020-06-04T11:12:47.864Z",
    "duration": 32,
    "testsRegistered": 45,
    "passPercent": 100,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "73076abd-452a-4d7b-a400-70b163db3eab",
      "title": "",
      "fullFile": "",
      "file": "",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "318b2b8e-40e5-4723-9c05-22a98f272695",
          "title": "evolutionOf(pokeData, name) : returns all evolutions of a pokemon: ",
          "fullFile": "/home/hackyourfuture/Documents/HYF/web-apps/week4/pokedex-api/logic/evolutions-of/spec.js",
          "file": "/logic/evolutions-of/spec.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "data sample 1, Squirtle",
              "fullTitle": "evolutionOf(pokeData, name) : returns all evolutions of a pokemon:  data sample 1, Squirtle",
              "timedOut": false,
              "duration": 1,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const actual = evolutionOf(dataSample1, 'Squirtle');\nconst expected = [\n  { \"num\": \"007\", \"name\": \"Squirtle\" },\n  { \"num\": \"008\", \"name\": \"Wartortle\" },\n  { \"num\": \"009\", \"name\": \"Blastoise\" }\n];\nassert.deepStrictEqual(actual, expected);",
              "err": {},
              "uuid": "f42d0e06-2987-4d26-8cd4-d03d18650f8f",
              "parentUUID": "318b2b8e-40e5-4723-9c05-22a98f272695",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "data sample 1, Wartortle",
              "fullTitle": "evolutionOf(pokeData, name) : returns all evolutions of a pokemon:  data sample 1, Wartortle",
              "timedOut": false,
              "duration": 1,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const actual = evolutionOf(dataSample1, 'Wartortle');\nconst expected = [\n  { \"num\": \"007\", \"name\": \"Squirtle\" },\n  { \"num\": \"008\", \"name\": \"Wartortle\" },\n  { \"num\": \"009\", \"name\": \"Blastoise\" }\n];\nassert.deepStrictEqual(actual, expected);",
              "err": {},
              "uuid": "7caed9a3-becc-44ac-a402-f7626625ed75",
              "parentUUID": "318b2b8e-40e5-4723-9c05-22a98f272695",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "data sample 1, Blastoise",
              "fullTitle": "evolutionOf(pokeData, name) : returns all evolutions of a pokemon:  data sample 1, Blastoise",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const actual = evolutionOf(dataSample1, 'Blastoise');\nconst expected = [\n  { \"num\": \"007\", \"name\": \"Squirtle\" },\n  { \"num\": \"008\", \"name\": \"Wartortle\" },\n  { \"num\": \"009\", \"name\": \"Blastoise\" }\n];\nassert.deepStrictEqual(actual, expected);",
              "err": {},
              "uuid": "f87befe8-1b65-47c6-9f23-24321a834329",
              "parentUUID": "318b2b8e-40e5-4723-9c05-22a98f272695",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "data sample 3, DoesNotExist",
              "fullTitle": "evolutionOf(pokeData, name) : returns all evolutions of a pokemon:  data sample 3, DoesNotExist",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const actual = evolutionOf(dataSample3, 'DoesNotExist');\nconst expected = null;\nassert.strictEqual(actual, expected);",
              "err": {},
              "uuid": "244848cc-1f68-4008-bc3c-67cac937154c",
              "parentUUID": "318b2b8e-40e5-4723-9c05-22a98f272695",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "data sample 5, Mew",
              "fullTitle": "evolutionOf(pokeData, name) : returns all evolutions of a pokemon:  data sample 5, Mew",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const actual = evolutionOf(dataSample5, 'Mew');\nconst expected = [\n  { \"name\": \"Mew\", \"num\": \"151\" }\n];\nassert.deepStrictEqual(actual, expected);",
              "err": {},
              "uuid": "529f7b86-78d2-4820-84a6-072d1b7440bb",
              "parentUUID": "318b2b8e-40e5-4723-9c05-22a98f272695",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "f42d0e06-2987-4d26-8cd4-d03d18650f8f",
            "7caed9a3-becc-44ac-a402-f7626625ed75",
            "f87befe8-1b65-47c6-9f23-24321a834329",
            "244848cc-1f68-4008-bc3c-67cac937154c",
            "529f7b86-78d2-4820-84a6-072d1b7440bb"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 2,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "00829c0c-8ab0-485b-88db-ff37edc674a0",
          "title": "findById(pokeData, id) : returns the pokemon object with the given id",
          "fullFile": "/home/hackyourfuture/Documents/HYF/web-apps/week4/pokedex-api/logic/find-by/id/spec.js",
          "file": "/logic/find-by/id/spec.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "data sample 1, 13",
              "fullTitle": "findById(pokeData, id) : returns the pokemon object with the given id data sample 1, 13",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const actual = findById(dataSample1, 13);\nconst expected = {\n  \"id\": 13,\n  \"num\": \"013\",\n  \"name\": \"Weedle\",\n  \"img\": \"http://www.serebii.net/pokemongo/pokemon/013.png\",\n  \"type\": [\n    \"Bug\",\n    \"Poison\"\n  ],\n  \"height\": \"0.30 m\",\n  \"weight\": \"3.2 kg\",\n  \"candy\": \"Weedle Candy\",\n  \"candy_count\": 12,\n  \"egg\": \"2 km\",\n  \"spawn_chance\": 7.12,\n  \"avg_spawns\": 712,\n  \"spawn_time\": \"02:21\",\n  \"multipliers\": [\n    1.01,\n    1.09\n  ],\n  \"weaknesses\": [\n    \"Fire\",\n    \"Flying\",\n    \"Psychic\",\n    \"Rock\"\n  ],\n  \"next_evolution\": [\n    { \"num\": \"014\", \"name\": \"Kakuna\" },\n    { \"num\": \"015\", \"name\": \"Beedrill\" }\n  ]\n};\nassert.deepStrictEqual(actual, expected);",
              "err": {},
              "uuid": "73187a9d-0f26-401f-a9de-3e40b5061b7f",
              "parentUUID": "00829c0c-8ab0-485b-88db-ff37edc674a0",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "data sample 1, 16",
              "fullTitle": "findById(pokeData, id) : returns the pokemon object with the given id data sample 1, 16",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const actual = findById(dataSample1, 16);\nconst expected = null;\nassert.deepStrictEqual(actual, expected);",
              "err": {},
              "uuid": "91c450cb-89ca-491c-aa74-e3acbf7b4a6b",
              "parentUUID": "00829c0c-8ab0-485b-88db-ff37edc674a0",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "data sample 2, 46",
              "fullTitle": "findById(pokeData, id) : returns the pokemon object with the given id data sample 2, 46",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const actual = findById(dataSample2, 46);\nconst expected = {\n  \"id\": 46,\n  \"num\": \"046\",\n  \"name\": \"Paras\",\n  \"img\": \"http://www.serebii.net/pokemongo/pokemon/046.png\",\n  \"type\": [\n    \"Bug\",\n    \"Grass\"\n  ],\n  \"height\": \"0.30 m\",\n  \"weight\": \"5.4 kg\",\n  \"candy\": \"Paras Candy\",\n  \"candy_count\": 50,\n  \"egg\": \"5 km\",\n  \"spawn_chance\": 2.36,\n  \"avg_spawns\": 236,\n  \"spawn_time\": \"01:42\",\n  \"multipliers\": [\n    2.02\n  ],\n  \"weaknesses\": [\n    \"Fire\",\n    \"Ice\",\n    \"Poison\",\n    \"Flying\",\n    \"Bug\",\n    \"Rock\"\n  ],\n  \"next_evolution\": [\n    {\n      \"num\": \"047\",\n      \"name\": \"Parasect\"\n    }\n  ]\n};\nassert.deepStrictEqual(actual, expected);",
              "err": {},
              "uuid": "cd6b224a-5616-45e5-b176-b65e130ead59",
              "parentUUID": "00829c0c-8ab0-485b-88db-ff37edc674a0",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "data sample 2, 42",
              "fullTitle": "findById(pokeData, id) : returns the pokemon object with the given id data sample 2, 42",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const actual = findById(dataSample2, 42);\nconst expected = null;\nassert.deepStrictEqual(actual, expected);",
              "err": {},
              "uuid": "38f5a803-8868-4b3e-994f-b505949ee0d3",
              "parentUUID": "00829c0c-8ab0-485b-88db-ff37edc674a0",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "data sample 3, 84",
              "fullTitle": "findById(pokeData, id) : returns the pokemon object with the given id data sample 3, 84",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const actual = findById(dataSample3, 84);\nconst expected = {\n  \"id\": 84,\n  \"num\": \"084\",\n  \"name\": \"Doduo\",\n  \"img\": \"http://www.serebii.net/pokemongo/pokemon/084.png\",\n  \"type\": [\n    \"Normal\",\n    \"Flying\"\n  ],\n  \"height\": \"1.40 m\",\n  \"weight\": \"39.2 kg\",\n  \"candy\": \"Doduo Candy\",\n  \"candy_count\": 50,\n  \"egg\": \"5 km\",\n  \"spawn_chance\": 0.52,\n  \"avg_spawns\": 52,\n  \"spawn_time\": \"05:10\",\n  \"multipliers\": [\n    2.19,\n    2.24\n  ],\n  \"weaknesses\": [\n    \"Electric\",\n    \"Rock\"\n  ],\n  \"next_evolution\": [\n    {\n      \"num\": \"085\",\n      \"name\": \"Dodrio\"\n    }\n  ]\n};\nassert.deepStrictEqual(actual, expected);",
              "err": {},
              "uuid": "b08a40dc-6511-4429-93c1-fbf8ca49d1a1",
              "parentUUID": "00829c0c-8ab0-485b-88db-ff37edc674a0",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "data sample 3, 85",
              "fullTitle": "findById(pokeData, id) : returns the pokemon object with the given id data sample 3, 85",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const actual = findById(dataSample3, 85);\nconst expected = {\n  \"id\": 85,\n  \"num\": \"085\",\n  \"name\": \"Dodrio\",\n  \"img\": \"http://www.serebii.net/pokemongo/pokemon/085.png\",\n  \"type\": [\n    \"Normal\",\n    \"Flying\"\n  ],\n  \"height\": \"1.80 m\",\n  \"weight\": \"85.2 kg\",\n  \"candy\": \"Doduo Candy\",\n  \"egg\": \"Not in Eggs\",\n  \"spawn_chance\": 0.22,\n  \"avg_spawns\": 22,\n  \"spawn_time\": \"02:12\",\n  \"multipliers\": null,\n  \"weaknesses\": [\n    \"Electric\",\n    \"Rock\"\n  ],\n  \"prev_evolution\": [\n    {\n      \"num\": \"084\",\n      \"name\": \"Doduo\"\n    }\n  ]\n};\nassert.deepStrictEqual(actual, expected);",
              "err": {},
              "uuid": "d03ecebc-b2f3-47e0-82d9-6e115b1ac674",
              "parentUUID": "00829c0c-8ab0-485b-88db-ff37edc674a0",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "73187a9d-0f26-401f-a9de-3e40b5061b7f",
            "91c450cb-89ca-491c-aa74-e3acbf7b4a6b",
            "cd6b224a-5616-45e5-b176-b65e130ead59",
            "38f5a803-8868-4b3e-994f-b505949ee0d3",
            "b08a40dc-6511-4429-93c1-fbf8ca49d1a1",
            "d03ecebc-b2f3-47e0-82d9-6e115b1ac674"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "1167ac14-2752-4e47-a1d5-19d45248fd91",
          "title": "findByKeyValue(pokeData, key, value) : returns the number and name of all pokemon with the given key/value pair",
          "fullFile": "/home/hackyourfuture/Documents/HYF/web-apps/week4/pokedex-api/logic/find-by/key-value/spec.js",
          "file": "/logic/find-by/key-value/spec.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "data sample 1, name, Weedle",
              "fullTitle": "findByKeyValue(pokeData, key, value) : returns the number and name of all pokemon with the given key/value pair data sample 1, name, Weedle",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const actual = findByKeyValue(dataSample1, 'name', 'Weedle');\nconst expected = [\n  { \"num\": \"013\", \"name\": \"Weedle\" }\n];\nassert.deepStrictEqual(actual, expected);",
              "err": {},
              "uuid": "2c62f38c-b4fd-402d-9f93-ec4305da0260",
              "parentUUID": "1167ac14-2752-4e47-a1d5-19d45248fd91",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "data sample 1, id, 12",
              "fullTitle": "findByKeyValue(pokeData, key, value) : returns the number and name of all pokemon with the given key/value pair data sample 1, id, 12",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const actual = findByKeyValue(dataSample1, 'id', \"12\");\nconst expected = [\n  { \"num\": \"012\", \"name\": \"Butterfree\" }\n];\nassert.deepStrictEqual(actual, expected);",
              "err": {},
              "uuid": "f5ca03c6-ec3f-405d-b01d-d08f68769f14",
              "parentUUID": "1167ac14-2752-4e47-a1d5-19d45248fd91",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "data sample 2, doesNotExist, hi!",
              "fullTitle": "findByKeyValue(pokeData, key, value) : returns the number and name of all pokemon with the given key/value pair data sample 2, doesNotExist, hi!",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const actual = findByKeyValue(dataSample2, 'doesNotExist', 'hi!');\nconst expected = null;\nassert.deepStrictEqual(actual, expected);",
              "err": {},
              "uuid": "548a3b65-d6bd-41f4-b61e-74df3528a34e",
              "parentUUID": "1167ac14-2752-4e47-a1d5-19d45248fd91",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "data sample 2, name, Mew",
              "fullTitle": "findByKeyValue(pokeData, key, value) : returns the number and name of all pokemon with the given key/value pair data sample 2, name, Mew",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const actual = findByKeyValue(dataSample2, 'name', 'Mew');\nconst expected = null;\nassert.deepStrictEqual(actual, expected);",
              "err": {},
              "uuid": "cb6a3dd1-dbc7-4c01-984d-a0ec137eb79c",
              "parentUUID": "1167ac14-2752-4e47-a1d5-19d45248fd91",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "data sample 3, egg, Not in Eggs",
              "fullTitle": "findByKeyValue(pokeData, key, value) : returns the number and name of all pokemon with the given key/value pair data sample 3, egg, Not in Eggs",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const actual = findByKeyValue(dataSample3, 'egg', 'Not in Eggs');\nconst expected = [\n  { \"num\": \"085\", \"name\": \"Dodrio\" },\n  { \"num\": \"087\", \"name\": \"Dewgong\" }\n];\nassert.deepStrictEqual(actual, expected);",
              "err": {},
              "uuid": "10078588-671c-4954-aad9-6fa99bdd0401",
              "parentUUID": "1167ac14-2752-4e47-a1d5-19d45248fd91",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "data sample 3, egg, 5 km",
              "fullTitle": "findByKeyValue(pokeData, key, value) : returns the number and name of all pokemon with the given key/value pair data sample 3, egg, 5 km",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const actual = findByKeyValue(dataSample3, 'egg', '5 km');\nconst expected = [\n  { \"num\": \"083\", \"name\": \"Farfetch'd\" },\n  { \"num\": \"084\", \"name\": \"Doduo\" },\n  { \"num\": \"086\", \"name\": \"Seel\" }\n];\nassert.deepStrictEqual(actual, expected);",
              "err": {},
              "uuid": "cb57812c-0e68-4568-a665-d51d688b0aa2",
              "parentUUID": "1167ac14-2752-4e47-a1d5-19d45248fd91",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "data sample 4, spawn_time, N/A",
              "fullTitle": "findByKeyValue(pokeData, key, value) : returns the number and name of all pokemon with the given key/value pair data sample 4, spawn_time, N/A",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const actual = findByKeyValue(dataSample4, 'spawn_time', 'N/A');\nconst expected = [\n  { \"num\": \"132\", \"name\": \"Ditto\" }\n];\nassert.deepStrictEqual(actual, expected);",
              "err": {},
              "uuid": "c9324803-4c77-4c16-a702-887586b0f61d",
              "parentUUID": "1167ac14-2752-4e47-a1d5-19d45248fd91",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "2c62f38c-b4fd-402d-9f93-ec4305da0260",
            "f5ca03c6-ec3f-405d-b01d-d08f68769f14",
            "548a3b65-d6bd-41f4-b61e-74df3528a34e",
            "cb6a3dd1-dbc7-4c01-984d-a0ec137eb79c",
            "10078588-671c-4954-aad9-6fa99bdd0401",
            "cb57812c-0e68-4568-a665-d51d688b0aa2",
            "c9324803-4c77-4c16-a702-887586b0f61d"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "4bbad23a-7460-4afb-a47f-a8b53456ba86",
          "title": "findByType(pokeData, type) : returns the name and number of all pokemon with this type",
          "fullFile": "/home/hackyourfuture/Documents/HYF/web-apps/week4/pokedex-api/logic/find-by/type/spec.js",
          "file": "/logic/find-by/type/spec.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "data sample 1, Bug",
              "fullTitle": "findByType(pokeData, type) : returns the name and number of all pokemon with this type data sample 1, Bug",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const actual = findByType(dataSample1, 'Bug');\nconst expected = [\n  { name: 'Caterpie', num: '010' },\n  { name: 'Metapod', num: '011' },\n  { name: 'Butterfree', num: '012' },\n  { name: 'Weedle', num: '013' },\n  { name: 'Kakuna', num: '014' },\n  { name: 'Beedrill', num: '015' }\n];\nassert.deepStrictEqual(actual, expected);",
              "err": {},
              "uuid": "ae9072ec-79ba-47b6-b186-a392972ed499",
              "parentUUID": "4bbad23a-7460-4afb-a47f-a8b53456ba86",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "data sample 2, Bug",
              "fullTitle": "findByType(pokeData, type) : returns the name and number of all pokemon with this type data sample 2, Bug",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const actual = findByType(dataSample2, 'Bug');\nconst expected = [\n  { name: 'Paras', num: '046' },\n  { name: 'Parasect', num: '047' }\n];\nassert.deepStrictEqual(actual, expected);",
              "err": {},
              "uuid": "fd1786d5-5cd8-4cf0-a383-fa1fe3b61ac8",
              "parentUUID": "4bbad23a-7460-4afb-a47f-a8b53456ba86",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "data sample 3, Water",
              "fullTitle": "findByType(pokeData, type) : returns the name and number of all pokemon with this type data sample 3, Water",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const actual = findByType(dataSample3, 'Water');\nconst expected = [\n  { name: 'Seel', num: '086' },\n  { name: 'Dewgong', num: '087' }\n];\nassert.deepStrictEqual(actual, expected);",
              "err": {},
              "uuid": "8c4c1d1c-432c-44ac-a0ff-d1530fac1bf2",
              "parentUUID": "4bbad23a-7460-4afb-a47f-a8b53456ba86",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "data sample 4, Normal",
              "fullTitle": "findByType(pokeData, type) : returns the name and number of all pokemon with this type data sample 4, Normal",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const actual = findByType(dataSample4, 'Normal');\nconst expected = [\n  { name: 'Tauros', num: '128' },\n  { name: 'Ditto', num: '132' }\n];\nassert.deepStrictEqual(actual, expected);",
              "err": {},
              "uuid": "30b66bb9-f134-433e-9c75-21b053c58c11",
              "parentUUID": "4bbad23a-7460-4afb-a47f-a8b53456ba86",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "data sample 5, Dragon",
              "fullTitle": "findByType(pokeData, type) : returns the name and number of all pokemon with this type data sample 5, Dragon",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const actual = findByType(dataSample5, 'Dragon');\nconst expected = [\n  { name: 'Dratini', num: '147' },\n  { name: 'Dragonair', num: '148' },\n  { name: 'Dragonite', num: '149' }\n];\nassert.deepStrictEqual(actual, expected);",
              "err": {},
              "uuid": "1336f62b-7a91-4fbe-970f-e4f406315f24",
              "parentUUID": "4bbad23a-7460-4afb-a47f-a8b53456ba86",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "ae9072ec-79ba-47b6-b186-a392972ed499",
            "fd1786d5-5cd8-4cf0-a383-fa1fe3b61ac8",
            "8c4c1d1c-432c-44ac-a0ff-d1530fac1bf2",
            "30b66bb9-f134-433e-9c75-21b053c58c11",
            "1336f62b-7a91-4fbe-970f-e4f406315f24"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "689b863a-d73b-4614-bfe5-9f840e52237c",
          "title": "findByValue(pokeData, value) : returns the name and number of all pokemon with this value in any key",
          "fullFile": "/home/hackyourfuture/Documents/HYF/web-apps/week4/pokedex-api/logic/find-by/value/spec.js",
          "file": "/logic/find-by/value/spec.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "data sample 1, 12",
              "fullTitle": "findByValue(pokeData, value) : returns the name and number of all pokemon with this value in any key data sample 1, 12",
              "timedOut": false,
              "duration": 1,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const actual = findByValue(dataSample1, '12');\nconst expected = [\n  { name: 'Caterpie', num: '010' },\n  { name: 'Butterfree', num: '012' },\n  { name: 'Weedle', num: '013' }\n];\nassert.deepStrictEqual(actual, expected);",
              "err": {},
              "uuid": "d917cf61-3c3a-4cef-96b6-00539dd45abd",
              "parentUUID": "689b863a-d73b-4614-bfe5-9f840e52237c",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "data sample 2, Bug",
              "fullTitle": "findByValue(pokeData, value) : returns the name and number of all pokemon with this value in any key data sample 2, Bug",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const actual = findByValue(dataSample2, 'Bug');\nconst expected = null;\nassert.deepStrictEqual(actual, expected);",
              "err": {},
              "uuid": "a7268fd6-5d82-42ea-b7b5-d24b2f7b69fc",
              "parentUUID": "689b863a-d73b-4614-bfe5-9f840e52237c",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "data sample 4, None",
              "fullTitle": "findByValue(pokeData, value) : returns the name and number of all pokemon with this value in any key data sample 4, None",
              "timedOut": false,
              "duration": 1,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const actual = findByValue(dataSample4, 'None');\nconst expected = [\n  { name: 'Mr. Mime', num: '122' },\n  { name: 'Scyther', num: '123' },\n  { name: 'Jynx', num: '124' },\n  { name: 'Electabuzz', num: '125' },\n  { name: 'Magmar', num: '126' },\n  { name: 'Pinsir', num: '127' },\n  { name: 'Tauros', num: '128' },\n  { name: 'Lapras', num: '131' },\n  { name: 'Ditto', num: '132' }\n];\nassert.deepStrictEqual(actual, expected);",
              "err": {},
              "uuid": "d4075f21-68df-4096-afcd-be64caf436ac",
              "parentUUID": "689b863a-d73b-4614-bfe5-9f840e52237c",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "data sample 5, null",
              "fullTitle": "findByValue(pokeData, value) : returns the name and number of all pokemon with this value in any key data sample 5, null",
              "timedOut": false,
              "duration": 1,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const actual = findByValue(dataSample5, \"null\");\nconst expected = [\n  { name: 'Moltres', num: '146' },\n  { name: 'Dragonite', num: '149' },\n  { name: 'Mewtwo', num: '150' },\n  { name: 'Mew', num: '151' }\n];\nassert.deepStrictEqual(actual, expected);",
              "err": {},
              "uuid": "9f691d6e-10bb-43d9-ad92-027915ec539f",
              "parentUUID": "689b863a-d73b-4614-bfe5-9f840e52237c",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "d917cf61-3c3a-4cef-96b6-00539dd45abd",
            "a7268fd6-5d82-42ea-b7b5-d24b2f7b69fc",
            "d4075f21-68df-4096-afcd-be64caf436ac",
            "9f691d6e-10bb-43d9-ad92-027915ec539f"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 3,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "9d6b5f4a-9942-4484-8182-cfb43e7a7d7e",
          "title": "findByWeakness(pokeData, weakness) : returns the name and number of all pokemon with this weakness",
          "fullFile": "/home/hackyourfuture/Documents/HYF/web-apps/week4/pokedex-api/logic/find-by/weakness/spec.js",
          "file": "/logic/find-by/weakness/spec.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "data sample 1, Electric",
              "fullTitle": "findByWeakness(pokeData, weakness) : returns the name and number of all pokemon with this weakness data sample 1, Electric",
              "timedOut": false,
              "duration": 1,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const actual = findByWeakness(dataSample1, 'Electric');\nconst expected = [\n  {\n    name: 'Squirtle',\n    num: '007'\n  },\n  {\n    name: 'Wartortle',\n    num: '008'\n  },\n  {\n    name: 'Blastoise',\n    num: '009'\n  },\n  {\n    name: 'Butterfree',\n    num: '012'\n  }\n];\nassert.deepStrictEqual(actual, expected);",
              "err": {},
              "uuid": "b0ace67c-8993-456a-9fe9-8b68899bed09",
              "parentUUID": "9d6b5f4a-9942-4484-8182-cfb43e7a7d7e",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "data sample 2, Bug",
              "fullTitle": "findByWeakness(pokeData, weakness) : returns the name and number of all pokemon with this weakness data sample 2, Bug",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const actual = findByWeakness(dataSample2, 'Bug');\nconst expected = [\n  {\n    name: 'Paras',\n    num: '046'\n  },\n  {\n    name: 'Parasect',\n    num: '047'\n  }\n];\nassert.deepStrictEqual(actual, expected);",
              "err": {},
              "uuid": "830e2b41-e40b-48aa-9ef6-0bdfd8de003d",
              "parentUUID": "9d6b5f4a-9942-4484-8182-cfb43e7a7d7e",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "data sample 3, Fighting",
              "fullTitle": "findByWeakness(pokeData, weakness) : returns the name and number of all pokemon with this weakness data sample 3, Fighting",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const actual = findByWeakness(dataSample3, 'Fighting');\nconst expected = [\n  {\n    name: 'Dewgong',\n    num: '087'\n  }\n];\nassert.deepStrictEqual(actual, expected);",
              "err": {},
              "uuid": "9f494065-a7da-4b79-9bcc-9f25f070d328",
              "parentUUID": "9d6b5f4a-9942-4484-8182-cfb43e7a7d7e",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "data sample 4, Normal",
              "fullTitle": "findByWeakness(pokeData, weakness) : returns the name and number of all pokemon with this weakness data sample 4, Normal",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const actual = findByWeakness(dataSample4, 'Normal');\nconst expected = null;\nassert.deepStrictEqual(actual, expected);",
              "err": {},
              "uuid": "f0bf2daf-a49f-4a5b-9a75-6a254ff61c1a",
              "parentUUID": "9d6b5f4a-9942-4484-8182-cfb43e7a7d7e",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "data sample 5, Dragon",
              "fullTitle": "findByWeakness(pokeData, weakness) : returns the name and number of all pokemon with this weakness data sample 5, Dragon",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const actual = findByWeakness(dataSample5, 'Dragon');\nconst expected = [\n  {\n    name: 'Dratini',\n    num: '147'\n  },\n  {\n    name: 'Dragonair',\n    num: '148'\n  },\n  {\n    name: 'Dragonite',\n    num: '149'\n  }\n];\nassert.deepStrictEqual(actual, expected);",
              "err": {},
              "uuid": "466f2b61-1003-48f3-8b38-34978fe621f1",
              "parentUUID": "9d6b5f4a-9942-4484-8182-cfb43e7a7d7e",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "b0ace67c-8993-456a-9fe9-8b68899bed09",
            "830e2b41-e40b-48aa-9ef6-0bdfd8de003d",
            "9f494065-a7da-4b79-9bcc-9f25f070d328",
            "f0bf2daf-a49f-4a5b-9a75-6a254ff61c1a",
            "466f2b61-1003-48f3-8b38-34978fe621f1"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 1,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "4cce760f-b2c8-4276-9f81-f71db36b99c7",
          "title": "typeStats(pokeData, type) : returns how many times a type appears in the pokeData",
          "fullFile": "/home/hackyourfuture/Documents/HYF/web-apps/week4/pokedex-api/logic/type-stats/spec.js",
          "file": "/logic/type-stats/spec.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "data sample 2, Grass",
              "fullTitle": "typeStats(pokeData, type) : returns how many times a type appears in the pokeData data sample 2, Grass",
              "timedOut": false,
              "duration": 1,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const actual = typeStats(dataSample2, 'Grass');\nconst expected = {\n  typeCount: 5,\n  typeName: 'Grass',\n  weaknessCount: 0\n};\nassert.deepStrictEqual(actual, expected);",
              "err": {},
              "uuid": "f066569a-b009-4d3c-9c3a-c79a7fbf35db",
              "parentUUID": "4cce760f-b2c8-4276-9f81-f71db36b99c7",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "data sample 2, Fire",
              "fullTitle": "typeStats(pokeData, type) : returns how many times a type appears in the pokeData data sample 2, Fire",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const actual = typeStats(dataSample2, 'Fire');\nconst expected = {\n  typeCount: 0,\n  typeName: 'Fire',\n  weaknessCount: 5\n};\nassert.deepStrictEqual(actual, expected);",
              "err": {},
              "uuid": "c0ad1cdb-2ea6-4acc-8396-837ff7fc9af8",
              "parentUUID": "4cce760f-b2c8-4276-9f81-f71db36b99c7",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "data sample 4, Normal",
              "fullTitle": "typeStats(pokeData, type) : returns how many times a type appears in the pokeData data sample 4, Normal",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const actual = typeStats(dataSample4, 'Normal');\nconst expected = {\n  typeCount: 2,\n  typeName: 'Normal',\n  weaknessCount: 0\n};\nassert.deepStrictEqual(actual, expected);",
              "err": {},
              "uuid": "90d68017-c07e-45e9-b62c-5efafd142335",
              "parentUUID": "4cce760f-b2c8-4276-9f81-f71db36b99c7",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "data sample 4, Fighting",
              "fullTitle": "typeStats(pokeData, type) : returns how many times a type appears in the pokeData data sample 4, Fighting",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const actual = typeStats(dataSample4, 'Fighting');\nconst expected = {\n  typeCount: 0,\n  typeName: 'Fighting',\n  weaknessCount: 3\n};\nassert.deepStrictEqual(actual, expected);",
              "err": {},
              "uuid": "b8db7c40-d057-4bfa-b686-f82f03f9e876",
              "parentUUID": "4cce760f-b2c8-4276-9f81-f71db36b99c7",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "data sample 5, Dragon",
              "fullTitle": "typeStats(pokeData, type) : returns how many times a type appears in the pokeData data sample 5, Dragon",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const actual = typeStats(dataSample5, 'Dragon');\nconst expected = {\n  typeCount: 3,\n  typeName: 'Dragon',\n  weaknessCount: 3\n};\nassert.deepStrictEqual(actual, expected);",
              "err": {},
              "uuid": "0c1893e1-4851-4cb3-ab36-3748d5196806",
              "parentUUID": "4cce760f-b2c8-4276-9f81-f71db36b99c7",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "data sample 5, Fairy",
              "fullTitle": "typeStats(pokeData, type) : returns how many times a type appears in the pokeData data sample 5, Fairy",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const actual = typeStats(dataSample5, 'Fairy');\nconst expected = {\n  typeCount: 0,\n  typeName: 'Fairy',\n  weaknessCount: 3\n};\nassert.deepStrictEqual(actual, expected);",
              "err": {},
              "uuid": "7e916e7f-5707-4ab4-a704-670969fe1aeb",
              "parentUUID": "4cce760f-b2c8-4276-9f81-f71db36b99c7",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "f066569a-b009-4d3c-9c3a-c79a7fbf35db",
            "c0ad1cdb-2ea6-4acc-8396-837ff7fc9af8",
            "90d68017-c07e-45e9-b62c-5efafd142335",
            "b8db7c40-d057-4bfa-b686-f82f03f9e876",
            "0c1893e1-4851-4cb3-ab36-3748d5196806",
            "7e916e7f-5707-4ab4-a704-670969fe1aeb"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 1,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "293a2032-7963-42cd-8f86-ac0f0ab193fc",
          "title": "valuesForKey(pokeData, key) : returns all unique values stored in that key",
          "fullFile": "/home/hackyourfuture/Documents/HYF/web-apps/week4/pokedex-api/logic/values-for-key/spec.js",
          "file": "/logic/values-for-key/spec.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "data sample 2, id",
              "fullTitle": "valuesForKey(pokeData, key) : returns all unique values stored in that key data sample 2, id",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const actual = valuesForKey(dataSample2, \"id\");\nconst expected = [43, 44, 45, 46, 47];\nassert.deepStrictEqual(actual, expected);",
              "err": {},
              "uuid": "137b6a97-474b-4e25-ad79-9dd928b607ed",
              "parentUUID": "293a2032-7963-42cd-8f86-ac0f0ab193fc",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "data sample 2, name",
              "fullTitle": "valuesForKey(pokeData, key) : returns all unique values stored in that key data sample 2, name",
              "timedOut": false,
              "duration": 1,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const actual = valuesForKey(dataSample2, \"name\");\nconst expected = [\"Oddish\", \"Gloom\", \"Vileplume\", \"Paras\", \"Parasect\"];\nassert.deepStrictEqual(actual, expected);",
              "err": {},
              "uuid": "fb8a2360-b568-46a2-a6ee-b4b7eab21cda",
              "parentUUID": "293a2032-7963-42cd-8f86-ac0f0ab193fc",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "data sample 3, num",
              "fullTitle": "valuesForKey(pokeData, key) : returns all unique values stored in that key data sample 3, num",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const actual = valuesForKey(dataSample3, \"num\");\nconst expected = [\"083\", \"084\", \"085\", \"086\", \"087\"];\nassert.deepStrictEqual(actual, expected);",
              "err": {},
              "uuid": "6f3e234c-cd3b-42fc-b27d-8c2b56ce50c4",
              "parentUUID": "293a2032-7963-42cd-8f86-ac0f0ab193fc",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "data sample 3, multipliers",
              "fullTitle": "valuesForKey(pokeData, key) : returns all unique values stored in that key data sample 3, multipliers",
              "timedOut": false,
              "duration": 1,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const actual = valuesForKey(dataSample3, \"multipliers\");\nconst expected = [null, [2.19, 2.24], [1.04, 1.96]];\nassert.deepStrictEqual(actual, expected);",
              "err": {},
              "uuid": "fdd8392d-77f6-45d5-9dc3-2d95cad6ab22",
              "parentUUID": "293a2032-7963-42cd-8f86-ac0f0ab193fc",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "data sample 4, weaknesses",
              "fullTitle": "valuesForKey(pokeData, key) : returns all unique values stored in that key data sample 4, weaknesses",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const actual = valuesForKey(dataSample4, \"weaknesses\");\nconst expected = [\n  [\"Bug\", \"Ghost\", \"Dark\"],\n  [\"Fire\", \"Electric\", \"Ice\", \"Flying\", \"Rock\"],\n  [\"Fire\", \"Bug\", \"Rock\", \"Ghost\", \"Dark\", \"Steel\"],\n  [\"Ground\"],\n  [\"Water\", \"Ground\", \"Rock\"],\n  [\"Fire\", \"Flying\", \"Rock\"],\n  [\"Fighting\"],\n  [\"Electric\", \"Grass\"],\n  [\"Electric\", \"Rock\"],\n  [\"Electric\", \"Grass\", \"Fighting\", \"Rock\"],\n  [\"Fighting\"],\n];\nassert.deepStrictEqual(actual, expected);",
              "err": {},
              "uuid": "30954b3a-0b1c-4e36-ac4b-742e130d83ff",
              "parentUUID": "293a2032-7963-42cd-8f86-ac0f0ab193fc",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "data sample 4, prev_evolution",
              "fullTitle": "valuesForKey(pokeData, key) : returns all unique values stored in that key data sample 4, prev_evolution",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const actual = valuesForKey(dataSample4, \"prev_evolution\");\nconst expected = [[{ num: \"129\", name: \"Magikarp\" }]];\nassert.deepStrictEqual(actual, expected);",
              "err": {},
              "uuid": "b1964ad3-a786-45ce-990c-0188b9bb15bf",
              "parentUUID": "293a2032-7963-42cd-8f86-ac0f0ab193fc",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "data sample 5, next_evolution",
              "fullTitle": "valuesForKey(pokeData, key) : returns all unique values stored in that key data sample 5, next_evolution",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const actual = valuesForKey(dataSample5, \"next_evolution\");\nconst expected = [\n  [\n    { num: \"148\", name: \"Dragonair\" },\n    { num: \"149\", name: \"Dragonite\" },\n  ],\n  [{ num: \"149\", name: \"Dragonite\" }],\n];\nassert.deepStrictEqual(actual, expected);",
              "err": {},
              "uuid": "c4b6c968-ffb5-4e98-9f93-7d61d3351caf",
              "parentUUID": "293a2032-7963-42cd-8f86-ac0f0ab193fc",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "137b6a97-474b-4e25-ad79-9dd928b607ed",
            "fb8a2360-b568-46a2-a6ee-b4b7eab21cda",
            "6f3e234c-cd3b-42fc-b27d-8c2b56ce50c4",
            "fdd8392d-77f6-45d5-9dc3-2d95cad6ab22",
            "30954b3a-0b1c-4e36-ac4b-742e130d83ff",
            "b1964ad3-a786-45ce-990c-0188b9bb15bf",
            "c4b6c968-ffb5-4e98-9f93-7d61d3351caf"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 2,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    }
  ],
  "meta": {
    "mocha": {
      "version": "7.2.0"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": true,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "6.1.1"
    },
    "marge": {
      "options": null,
      "version": "5.1.0"
    }
  }
}